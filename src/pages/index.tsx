import Head from 'next/head';
import React,{ useState, useEffect } from 'react';
import styles from '@/styles/Home.module.css';
import Header from '@/components/Header/Header';
import Form from '@/components/Form/Form';
import Todo from '@/components/Todo/Todo';

import {db} from '../firebase';
import { collection, onSnapshot, query, doc, updateDoc, deleteDoc } from 'firebase/firestore';

const style = {
  bg:`h-screen w-screen p-4 bg-gradient-to-r from-[#2F80ED] to-[#1CB5E0]`
}
export default function Home() {
  const [todos, setTodos] = useState([]);
  const [role, setRole] = useState('');
  function loadTasks(user:string) {
    setRole(user)
  }


  // Read todo
      useEffect(()=>{
        console.log(`${role}-todos`)
        const q = query(collection(db, `${role}-todos`))
        const unsubscribe = onSnapshot(q, (QuerySnapshot) =>{
          let todosArr = []
          QuerySnapshot.forEach((doc) =>{
            todosArr.push({...doc.data(),  id: doc.id})
          });
          setTodos(todosArr);
        })
        return unsubscribe;
      },[role])
  //Update todo
      const toggleComplete= async (todo) =>{
        await updateDoc(doc(db, `${role}-todos`, todo.id), {
          completed: !todo.completed
        })
      }
  //Delete todo

  const deleteTodo = async (id) =>{
    await deleteDoc(doc(db, `${role}-todos`, id))
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Header/>
        <div className={styles.tabs}>
          <button onClick={() => loadTasks('gabriel')}>Gabriel</button>
          <button onClick={() => loadTasks('maria')}>Maria</button>
          <button onClick={() => loadTasks('house')}>House</button>
        </div>
        <div className={styles.container}>
          <Form role={role} db={db}/>
          <ul className={styles.ul}>
            {todos.map((todo, index)=>(
              <Todo key={index} description={todo} toggleComplete={toggleComplete} deleteTodo={deleteTodo} />
            ))}          
          </ul>
          <p className={styles.listTodo}>You have { todos.length } todos</p>
        </div>
      </main>
    </>
  )
}
